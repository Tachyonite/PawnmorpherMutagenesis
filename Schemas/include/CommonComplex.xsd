<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:complexType name="ListOfStrings">
        <xs:sequence>
            <xs:element name="li" type="xs:string" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="StatModifier">
        <xs:all>
            <xs:element name="stat" type="xs:string" />
            <xs:element name="value" type="xs:float" />
        </xs:all>
    </xs:complexType>

    <xs:complexType name="StatModifiers">
        <xs:sequence>
            <xs:any processContents="lax" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="AbilityStatModifiers">
        <xs:all>
            <xs:element name="ability" type="xs:string" />
            <xs:element name="modifiers">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="li" type="StatModifier" minOccurs="1" maxOccurs="unbounded" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:all>
    </xs:complexType>

    <xs:complexType name="ApparelRequirement">
        <xs:all>
            <xs:element name="bodyPartGroupsMatchAny" type="ListOfStrings" minOccurs="0" />
            <xs:element name="requiredTags" type="ListOfStrings" minOccurs="0" />
            <xs:element name="allowedTags" type="ListOfStrings" minOccurs="0" />
            <xs:element name="requiredDefs" type="ListOfStrings" minOccurs="0" />
            <xs:element name="groupLabel" type="xs:string" minOccurs="0" />
        </xs:all>
    </xs:complexType>
    <xs:complexType name="IdeoWeaponClassPair">
        <xs:all>
            <xs:element name="noble" type="xs:string" />
            <xs:element name="despised" type="xs:string" />
        </xs:all>
    </xs:complexType>
    <xs:simpleType name="Rect">
        <xs:restriction base="xs:string">
            <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ShadowData">
        <xs:all>
            <xs:element name="volume" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="offset" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>

        </xs:all>
    </xs:complexType>

    <xs:complexType name="DamageGraphicData">
        <xs:all>
            <xs:element name="enabled" type="xs:boolean" minOccurs="0" />

            <xs:element name="rectN" type="Rect" minOccurs="0" />
            <xs:element name="rectE" type="Rect" minOccurs="0" />
            <xs:element name="rectS" type="Rect" minOccurs="0" />
            <xs:element name="rectW" type="Rect" minOccurs="0" />
            <xs:element name="rect" type="Rect" minOccurs="0" />

            <xs:element name="scratches" type="ListOfStrings" minOccurs="0" />

            <xs:element name="cornerTL" type="xs:string" minOccurs="0" />
            <xs:element name="cornerTR" type="xs:string" minOccurs="0" />
            <xs:element name="cornerBL" type="xs:string" minOccurs="0" />
            <xs:element name="cornerBR" type="xs:string" minOccurs="0" />
            <xs:element name="edgeLeft" type="xs:string" minOccurs="0" />
            <xs:element name="edgeRight" type="xs:string" minOccurs="0" />
            <xs:element name="edgeTop" type="xs:string" minOccurs="0" />
            <xs:element name="edgeBot" type="xs:string" minOccurs="0" />
        </xs:all>
    </xs:complexType>

    <xs:simpleType name="LinkDrawerType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="None" />
            <xs:enumeration value="Basic" />
            <xs:enumeration value="CornerFiller" />
            <xs:enumeration value="Transmitter" />
            <xs:enumeration value="TransmitterOverlay" />
            <xs:enumeration value="Asymmetric" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="AsymBoarderData">
        <xs:all>
            <xs:element name="color" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\(0\.[0-9]+,0\.[0-9]+,0\.[0-9]+(,0\.[0-9]+)?\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="size" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="offset" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:all>
    </xs:complexType>

    <xs:complexType name="AsymmetricLinkData">
        <xs:all>
            <xs:element name="linkFlags" type="xs:string" minOccurs="0" />
            <xs:element name="linkToDoors" type="xs:boolean" minOccurs="0" />
            <xs:element name="drawDoorBorderEast" type="AsymBoarderData" minOccurs="0" />
            <xs:element name="drawDoorBorderWest" type="AsymBoarderData" minOccurs="0" />
        </xs:all>
    </xs:complexType>

    <xs:complexType name="GraphicData">
        <xs:all>
            <xs:element name="texPath" type="xs:string" minOccurs="0" />
            <xs:element name="graphicClass" type="xs:string" minOccurs="0" />
            <xs:element name="shaderType" type="xs:string" minOccurs="0" />

            <xs:element name="shaderParameters" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:any maxOccurs="unbounded" processContents="lax" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>


            <xs:element name="color" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\(0\.[0-9]+,0\.[0-9]+,0\.[0-9]+(,0\.[0-9]+)?\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>

            <xs:element name="colorTwo" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\(0\.[0-9]+,0\.[0-9]+,0\.[0-9]+(,0\.[0-9]+)?\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>

            <xs:element name="drawSize" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>

            <xs:element name="drawOffset" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>

            <xs:element name="drawOffsetNorth" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>

            <xs:element name="drawOffsetEast" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>

            <xs:element name="drawOffsetSouth" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>

            <xs:element name="drawOffsetWest" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="\([+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+,[+-]?([0-9]*[.])?[0-9]+\)" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>


            <xs:element name="onGroundRandomRotateAngle" type="xs:float" minOccurs="0" />
            <xs:element name="drawRotated" type="xs:boolean" minOccurs="0" />
            <xs:element name="allowFlip" type="xs:boolean" minOccurs="0" />
            <xs:element name="flipExtraRotation" type="xs:float" minOccurs="0" />
            <xs:element name="renderInstanced" type="xs:boolean" minOccurs="0" />
            <xs:element name="allowAtlasing" type="xs:boolean" minOccurs="0" />
            <xs:element name="renderQueue" type="xs:int" minOccurs="0" />

            <xs:element name="shadowData" type="ShadowData" minOccurs="0" />
            <xs:element name="damageData" type="DamageGraphicData" minOccurs="0" />
            <xs:element name="linkType" type="LinkDrawerType" minOccurs="0" />
            <xs:element name="linkFlags" type="xs:string" minOccurs="0" />

            <xs:element name="asymmetricLink" type="AsymmetricLinkData" minOccurs="0" />

        </xs:all>
    </xs:complexType>
    <xs:simpleType name="VerbCategories">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Undefined" />
            <xs:enumeration value="BeatFire" />
            <xs:enumeration value="Ignite" />
            <xs:enumeration value="Misc" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="TargetingParams">
        <xs:all>
            <xs:element name="canTargetLocations" type="xs:boolean" minOccurs="0" />
            <xs:element name="canTargetSelf" type="xs:boolean" minOccurs="0" />
            <xs:element name="canTargetPawns" type="xs:boolean" minOccurs="0" />
            <xs:element name="canTargetFires" type="xs:boolean" minOccurs="0" />
            <xs:element name="canTargetBuildings" type="xs:boolean" minOccurs="0" />
            <xs:element name="canTargetItems" type="xs:boolean" minOccurs="0" />
            <xs:element name="canTargetAnimals" type="xs:boolean" minOccurs="0" />
            <xs:element name="canTargetHumans" type="xs:boolean" minOccurs="0" />
            <xs:element name="canTargetMechs" type="xs:boolean" minOccurs="0" />
            <xs:element name="canTargetPlants" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetFlammables" type="xs:boolean" minOccurs="0" />
            <xs:element name="mustBeSelectable" type="xs:boolean" minOccurs="0" />
            <xs:element name="neverTargetDoors" type="xs:boolean" minOccurs="0" />
            <xs:element name="neverTargetIncapacitated" type="xs:boolean" minOccurs="0" />
            <xs:element name="neverTargetHostileFaction" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetSameIdeo" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetThingsAffectingRegions" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetDamagedThings" type="xs:boolean" minOccurs="0" />
            <xs:element name="mapObjectTargetsMustBeAutoAttackable" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetIncapacitatedPawns" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetColonistsOrPrisoners" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetColonistsOrPrisonersOrSlaves" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetColonistsOrPrisonersOrSlavesAllowMinorMentalBreaks" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetControlledPawns" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetPrisonersOfColony" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetPsychicSensitive" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyTargetAnimaTrees" type="xs:boolean" minOccurs="0" />
        </xs:all>
    </xs:complexType>

    <xs:complexType name="ExtraDamage">
        <xs:all>
            <xs:element name="def" type="xs:string">
                <xs:annotation>
                    <xs:documentation>damage def</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="amount" type="xs:float" />
            <xs:element name="armorPenetration" type="xs:float" minOccurs="0" />
            <xs:element name="chance" type="xs:float" minOccurs="0" />
        </xs:all>
    </xs:complexType>

    <xs:complexType name="SurpriseAttackProps">
        <xs:all>
            <xs:element name="extraMeleeDamages">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="li" type="ExtraDamage" minOccurs="1" maxOccurs="unbounded" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:all>
    </xs:complexType>

    <xs:simpleType name="Intelligence">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Animal" />
            <xs:enumeration value="ToolUser" />
            <xs:enumeration value="Humanlike" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="VerbProperties">
        <xs:all>
            <xs:element name="category" type="VerbCategories" minOccurs="0" />
            <xs:element name="verbClass" type="xs:string" minOccurs="0" />
            <xs:element name="label" type="xs:string" minOccurs="0" />
            <xs:element name="isPrimary" type="xs:boolean" minOccurs="0" />
            <xs:element name="violent" type="xs:boolean" minOccurs="0" />
            <xs:element name="minRange" type="xs:float" minOccurs="0" />
            <xs:element name="range" type="xs:float" minOccurs="0" />
            <xs:element name="burstShotCount" type="xs:int" minOccurs="0" />
            <xs:element name="ticksBetweenBurstShots" type="xs:int" minOccurs="0" />
            <xs:element name="noiseRadius" type="xs:float" minOccurs="0" />
            <xs:element name="hasStandardCommand" type="xs:boolean" minOccurs="0" />
            <xs:element name="targetable" type="xs:boolean" minOccurs="0" />
            <xs:element name="nonInterruptingSelfCase" type="xs:boolean" minOccurs="0" />
            <xs:element name="targetParams" type="TargetingParams" minOccurs="0" />

            <xs:element name="requireLineOfSight" type="xs:boolean" minOccurs="0" />
            <xs:element name="mustCastOnOpenGround" type="xs:boolean" minOccurs="0" />
            <xs:element name="forceNormalTimeSpeed" type="xs:boolean" minOccurs="0" />
            <xs:element name="onlyManualCast" type="xs:boolean" minOccurs="0" />
            <xs:element name="stopBurstWithoutLos" type="xs:boolean" minOccurs="0" />

            <xs:element name="surpriseAttack" type="SurpriseAttackProps" minOccurs="0" />
            <xs:element name="commonality" type="xs:float" minOccurs="0" />
            <xs:element name="minIntelligence" type="Intelligence" minOccurs="0" />
            <xs:element name="consumeFuelPerShot" type="xs:float" minOccurs="0" />
            <xs:element name="stunTargetOnCastStart" type="xs:boolean" minOccurs="0" />
            <xs:element name="warmupTime" type="xs:float" minOccurs="0" />
            <xs:element name="defaultCooldownTime" type="xs:float" minOccurs="0" />
            <xs:element name="commandIcon" type="xs:float" minOccurs="0" />
            <xs:element name="soundCast" type="xs:string" minOccurs="0" />
            <xs:element name="soundCastTail" type="xs:string" minOccurs="0" />
            <xs:element name="soundAiming" type="xs:string" minOccurs="0" />
            <xs:element name="muzzleFlashScale" type="xs:float" minOccurs="0" />
            <xs:element name="impactMote" type="xs:string" minOccurs="0" />
            <xs:element name="impactFleck" type="xs:string" minOccurs="0" />
            <xs:element name="drawAimPie" type="xs:boolean" minOccurs="0" />
            <xs:element name="drawHighlightWithLineOfSight" type="xs:boolean" minOccurs="0" />
            <xs:element name="linkedBodyPartsGroup" type="xs:string" minOccurs="0" />
            <xs:element name="ensureLinkedBodyPartsGroupAlwaysUsable" type="xs:string" minOccurs="0" />
            <xs:element name="meleeDamageDef" type="xs:string" minOccurs="0" />
            <xs:element name="meleeDamageBaseAmount" type="xs:float" minOccurs="0" />
            <xs:element name="meleeArmorPenetrationBase" type="xs:float" minOccurs="0" />

            <xs:element name="ai_IsWeapon" type="xs:boolean" minOccurs="0" />
            <xs:element name="ai_IsBuildingDestroyer" type="xs:boolean" minOccurs="0" />
            <xs:element name="ai_AvoidFriendlyFireRadius" type="xs:float" minOccurs="0" />

            <xs:element name="defaultProjectile" type="xs:string" minOccurs="0" />
            <xs:element name="accuracyTouch" type="xs:float" minOccurs="0" />
            <xs:element name="accuracyShort" type="xs:float" minOccurs="0" />
            <xs:element name="accuracyMedium" type="xs:float" minOccurs="0" />
            <xs:element name="accuracyLong" type="xs:float" minOccurs="0" />

            <xs:element name="spawnDef" type="xs:string" minOccurs="0" />
            <xs:element name="colonyWideTaleDef" type="xs:string" minOccurs="0" />
            <xs:element name="bodypartTagTarget" type="xs:string" minOccurs="0" />
            <xs:element name="rangedFireRulepack" type="xs:string" minOccurs="0" />

        </xs:all>
    </xs:complexType>
</xs:schema>